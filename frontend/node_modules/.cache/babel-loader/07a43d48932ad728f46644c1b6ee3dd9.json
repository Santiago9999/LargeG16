{"ast":null,"code":"var _jsxFileName = \"/home/elaine/ReactTest/frontend/src/components/Verification.js\";\nimport React, { useState, Component } from 'react';\nimport '../components/Background.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nvar code;\nvar email;\nvar noError;\nconst initialState = {\n  code: \"\",\n  codeError: \"\",\n  email: \"\",\n  emailError: \"\",\n  error: \"\",\n  result: \"\"\n};\n\nclass Verification extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        var url = 'https://cop4331mern.herokuapp.com/api/postvalidateUser';\n        var postValidate = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email.value,\n            code: code.value\n          })\n        };\n        fetch(url, postValidate).then(res => res.json()).then(json => this.setState({\n          result: json.result,\n          error: json.error\n        }, function () {\n          noError = this.errorChecking();\n\n          if (noError) {\n            console.log(this.state);\n            this.setState(initialState);\n            window.location.href = '/login';\n          }\n        }));\n        this.setState(initialState);\n      }\n    };\n\n    this.errorChecking = () => {\n      let error = \"\";\n\n      if (this.state.error === \" \") {//there are no errors\n      } else {\n        error = this.state.error;\n      }\n\n      if (error) {\n        this.setState({\n          error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.validate = () => {\n      let codeError = \"\";\n      let emailError = \"\";\n\n      if (!this.state.email) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i.test(this.state.email)) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (this.state.code.length != 8) {\n        codeError = \"Please enter a valid code.\";\n      }\n\n      if (codeError || emailError) {\n        this.setState({\n          codeError,\n          emailError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = event => {\n      const isCheckbox = event.target.type === \"checkbox\";\n      this.setState({\n        [event.target.name]: isCheckbox ? event.target.checked : event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"verificationDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-6 col-md-7 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      class: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.email,\n      name: \"email\",\n      type: \"email\",\n      id: \"email\",\n      class: \"form-control\",\n      placeholder: \"Email\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => email = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, \" \", this.state.emailError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.code,\n      name: \"code\",\n      type: \"text\",\n      id: \"code\",\n      class: \"form-control\",\n      placeholder: \"Verification Code\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => code = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, \"Verification Code\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, \" \", this.state.codeError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, \" \", this.state.error, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-lg btn-secondary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, \"Verify\"))))));\n  }\n\n}\n\nexport default Verification;","map":{"version":3,"sources":["/home/elaine/ReactTest/frontend/src/components/Verification.js"],"names":["React","useState","Component","code","email","noError","initialState","codeError","emailError","error","result","Verification","state","handleSubmit","event","preventDefault","isValid","validate","url","postValidate","method","headers","body","JSON","stringify","value","fetch","then","res","json","setState","errorChecking","console","log","window","location","href","test","length","handleChange","isCheckbox","target","type","name","checked","render","c"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport '../components/Background.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nvar code;\r\nvar email;\r\nvar noError;\r\n\r\nconst initialState = {\r\n    code: \"\",\r\n    codeError: \"\",\r\n    email: \"\",\r\n    emailError: \"\",\r\n    error: \"\",\r\n    result: \"\"\r\n};\r\n\r\nclass Verification extends Component {\r\n    state = initialState;\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            var url = 'https://cop4331mern.herokuapp.com/api/postvalidateUser';\r\n            var postValidate =\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: email.value, code: code.value })\r\n            }\r\n\r\n            fetch(url, postValidate)\r\n                .then(res => res.json())\r\n                .then(json => this.setState({\r\n                    result: json.result, error: json.error\r\n                }, function () {\r\n                    noError = this.errorChecking();\r\n                    if (noError) {\r\n                        console.log(this.state);\r\n                        this.setState(initialState);\r\n                        window.location.href = '/login';\r\n                    }\r\n                })\r\n                );\r\n                this.setState(initialState);\r\n        }\r\n    };\r\n\r\n    errorChecking = () => {\r\n        let error = \"\";\r\n\r\n        if (this.state.error === \" \") {\r\n            //there are no errors\r\n        } else {\r\n            error = this.state.error;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validate = () => {\r\n        let codeError = \"\";\r\n        let emailError = \"\";\r\n\r\n        if (!this.state.email) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (!((/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i).test(this.state.email))) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (this.state.code.length != 8) {\r\n            codeError = \"Please enter a valid code.\";\r\n        }\r\n\r\n        if (codeError || emailError) {\r\n            this.setState({ codeError, emailError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"verificationDiv\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6 col-md-7 mx-auto\">\r\n                            <form onSubmit={this.handleSubmit} class=\"form-signin\">\r\n                                <div class=\"text-center mb-4\"></div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.email} name=\"email\" type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" required=\"\" autofocus=\"\" ref={(c) => email = c} onChange={this.handleChange} />\r\n                                    <label for=\"email\">Email</label>\r\n                                    <div className=\"errorMessage\"> {this.state.emailError} </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.code} name=\"code\" type=\"text\" id=\"code\" class=\"form-control\" placeholder=\"Verification Code\" required=\"\" autofocus=\"\" ref={(c) => code = c} onChange={this.handleChange} />\r\n                                    <label for=\"code\">Verification Code</label>\r\n                                    <div className=\"errorMessage\"> {this.state.codeError} </div>\r\n                                </div>\r\n\r\n                                <div className=\"errorMessage\"> {this.state.error} </div> <br />\r\n\r\n                                <button class=\"btn btn-lg btn-secondary btn-block\" type=\"submit\">Verify</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Verification;"]},"metadata":{},"sourceType":"module"}