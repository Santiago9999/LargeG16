{"ast":null,"code":"var _jsxFileName = \"/home/elaine/ReactTest/frontend/src/components/LoginForm.js\";\nimport React, { useState, Component } from 'react';\nimport '../components/Background.css';\nimport NavigationBar from '../components/NavigationBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport md5 from '../components/md5';\nvar email;\nvar password;\nvar hashedPassword;\nvar id;\nvar firstName;\nvar lastName;\nvar Intro;\nvar CS1;\nvar CS2;\nvar Total;\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  emailError: \"\",\n  passwordError: \"\"\n};\n\nfunction saveCookie() {\n  var minutes = 20;\n  var date = new Date();\n  date.setTime(date.getTime() + minutes * 60 * 1000);\n  document.cookie = \"id=\" + id + \",firstName=\" + firstName + \",lastName=\" + lastName + \",Intro=\" + Intro + \",CS1=\" + CS1 + \",CS2=\" + CS2 + \",Total=\" + Total + \";expires=\" + date.toGMTString();\n}\n\nfunction readCookie() {\n  var data = document.cookie;\n  var splits = data.split(\",\");\n\n  for (var i = 0; i < splits.length; i++) {\n    var thisOne = splits[i].trim();\n    var tokens = thisOne.split(\"=\");\n\n    if (tokens[0] == \"id\") {\n      id = parseInt(tokens[1].trim());\n    } else if (tokens[0] == \"firstName\") {\n      firstName = tokens[1];\n    } else if (tokens[0] == \"lastName\") {\n      lastName = tokens[1];\n    } else if (tokens[0] == \"Intro\") {\n      Intro = tokens[1];\n    } else if (tokens[0] == \"CS1\") {\n      CS1 = tokens[1];\n    } else if (tokens[0] == \"CS2\") {\n      CS2 = tokens[1];\n    } else if (tokens[0] == \"Total\") {\n      Total = tokens[1];\n    }\n  }\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        hashedPassword = md5(this.state.password); //saveCookie();\n\n        console.log(this.state);\n        alert(email.value + ' ' + password.value);\n        this.setState(initialState);\n        window.location.href = '/logged';\n      }\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n      let passwordError = \"\";\n\n      if (!this.state.email) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i.test(this.state.email)) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!this.state.password) {\n        passwordError = \"Invalid Password\";\n      }\n\n      if (emailError || passwordError) {\n        this.setState({\n          emailError,\n          passwordError\n        });\n        return false;\n      }\n\n      alert(email.value + ' ' + password.value);\n      return true;\n    };\n\n    this.handleChange = event => {\n      const isCheckbox = event.target.type === \"checkbox\";\n      this.setState({\n        [event.target.name]: isCheckbox ? event.target.checked : event.target.value\n      });\n    };\n\n    this.state = {\n      id: \"\",\n      dummyId: \"\",\n      firstName: \"\",\n      dummyFirstName: \"\",\n      lastName: \"\",\n      dummyLastName: \"\",\n      Intro: [],\n      dummyIntro: [],\n      CS1: [],\n      dummyCS1: [],\n      CS2: [],\n      dummyCS2: [],\n      Total: [],\n      dummyTotal: [],\n      error: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var url = 'https://cop4331mern.herokuapp.com/api/getLogin';\n    var postLogin = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: \"Juanherrera413@hotmail.com\",\n        password: \"T123\"\n      }) //change to hashed\n\n    };\n    fetch(url, postLogin).then(res => res.json()).then(json => this.setState({\n      dummyId: json.ID,\n      dummyFirstName: json.firstName,\n      dummyLastName: json.lastName,\n      dummyIntro: json.intro,\n      dummyCS1: json.CS1,\n      dummyCS2: json.CS2,\n      dummyTotal: json.Total,\n      error: json.error\n    }));\n    alert(this.dummyFirstName); // if (this.state.error != 'Sucess') {\n    //     alert(this.state.error);\n    // } else {\n    //     this.setState(\n    //         {\n    //             id: this.state.dummyId, firstName: this.state.dummyFirstName, lastName: this.state.dummyLastName, Intro: this.state.dummyIntro,\n    //             CS1: this.state.dummyCS1, CS2: this.state.dummyCS2, Total: this.state.dummyTotal\n    //         }\n    //     );\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loginDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-6 col-md-7 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      class: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 43\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.email,\n      name: \"email\",\n      type: \"email\",\n      id: \"email\",\n      class: \"form-control\",\n      placeholder: \"Email\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => email = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }, \" \", this.state.emailError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.password,\n      name: \"password\",\n      type: \"password\",\n      id: \"password\",\n      class: \"form-control\",\n      placeholder: \"Password\",\n      required: \"\",\n      ref: c => password = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, \" \", this.state.passwordError, \" \")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-lg btn-secondary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, \"Login\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ResetPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/forgotpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, \" Forgot password? \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ResetPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \" New User? Register Here.\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/elaine/ReactTest/frontend/src/components/LoginForm.js"],"names":["React","useState","Component","NavigationBar","md5","email","password","hashedPassword","id","firstName","lastName","Intro","CS1","CS2","Total","initialState","emailError","passwordError","saveCookie","minutes","date","Date","setTime","getTime","document","cookie","toGMTString","readCookie","data","splits","split","i","length","thisOne","trim","tokens","parseInt","LoginForm","constructor","props","state","handleSubmit","event","preventDefault","isValid","validate","console","log","alert","value","setState","window","location","href","test","handleChange","isCheckbox","target","type","name","checked","dummyId","dummyFirstName","dummyLastName","dummyIntro","dummyCS1","dummyCS2","dummyTotal","error","componentDidMount","url","postLogin","method","headers","body","JSON","stringify","fetch","then","res","json","ID","intro","render","c"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport '../components/Background.css';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport md5 from '../components/md5'\r\n\r\nvar email;\r\nvar password;\r\nvar hashedPassword;\r\nvar id;\r\nvar firstName;\r\nvar lastName;\r\nvar Intro;\r\nvar CS1;\r\nvar CS2;\r\nvar Total;\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\"\r\n};\r\n\r\nfunction saveCookie()\r\n{\r\n\tvar minutes = 20;\r\n\tvar date = new Date();\r\n\tdate.setTime(date.getTime()+(minutes*60*1000));\t\r\n\tdocument.cookie = \"id=\" + id + \",firstName=\" + firstName + \",lastName=\" + lastName + \",Intro=\" + Intro + \",CS1=\" + CS1 + \",CS2=\" + CS2 + \",Total=\" + Total + \";expires=\" + date.toGMTString();\r\n}\r\n\r\nfunction readCookie()\r\n{\r\n\tvar data = document.cookie;\r\n\tvar splits = data.split(\",\");\r\n\tfor(var i = 0; i < splits.length; i++) \r\n\t{\r\n\t\tvar thisOne = splits[i].trim();\r\n\t\tvar tokens = thisOne.split(\"=\");\r\n        if(tokens[0] == \"id\"){\r\n            id = parseInt(tokens[1].trim());\r\n        }\r\n        else if( tokens[0] == \"firstName\" )\r\n\t\t{\r\n\t\t\tfirstName = tokens[1];\r\n\t\t}\r\n\t\telse if( tokens[0] == \"lastName\" )\r\n\t\t{\r\n\t\t\tlastName = tokens[1];\r\n\t\t}\r\n\t\telse if( tokens[0] == \"Intro\" )\r\n\t\t{\r\n\t\t\tIntro = tokens[1];\r\n        } else if (tokens[0] == \"CS1\")\r\n        {\r\n            CS1 = tokens[1];\r\n        } else if (tokens[0] == \"CS2\")\r\n        {\r\n            CS2 = tokens[1];\r\n        } else if(tokens[0] == \"Total\")\r\n        {\r\n            Total = tokens[1];\r\n        }\r\n\t}\r\n}\r\n\r\n\r\nclass LoginForm extends Component {\r\n    state = initialState;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            dummyId: \"\",\r\n            firstName: \"\",\r\n            dummyFirstName: \"\",\r\n            lastName: \"\",\r\n            dummyLastName: \"\",\r\n            Intro: [],\r\n            dummyIntro:[],\r\n            CS1: [],\r\n            dummyCS1: [],\r\n            CS2: [],\r\n            dummyCS2:[],\r\n            Total: [],\r\n            dummyTotal: [],\r\n            error: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = 'https://cop4331mern.herokuapp.com/api/getLogin';\r\n        var postLogin =\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email: \"Juanherrera413@hotmail.com\", password: \"T123\" }) //change to hashed\r\n        }\r\n        fetch(url, postLogin)\r\n            .then(res => res.json())\r\n            .then(json => this.setState({\r\n                dummyId: json.ID, dummyFirstName: json.firstName, dummyLastName: json.lastName, dummyIntro: json.intro, dummyCS1: json.CS1,\r\n                dummyCS2: json.CS2, dummyTotal: json.Total, error: json.error\r\n            })\r\n            );\r\n\r\n            alert(this.dummyFirstName);\r\n        // if (this.state.error != 'Sucess') {\r\n        //     alert(this.state.error);\r\n        // } else {\r\n        //     this.setState(\r\n        //         {\r\n        //             id: this.state.dummyId, firstName: this.state.dummyFirstName, lastName: this.state.dummyLastName, Intro: this.state.dummyIntro,\r\n        //             CS1: this.state.dummyCS1, CS2: this.state.dummyCS2, Total: this.state.dummyTotal\r\n        //         }\r\n        //     );\r\n        }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            hashedPassword = md5(this.state.password);\r\n            \r\n\r\n                //saveCookie();\r\n                console.log(this.state);\r\n                alert(email.value + ' ' + password.value);\r\n                this.setState(initialState);\r\n                window.location.href = '/logged';\r\n            }\r\n        }\r\n\r\n    validate = () => {\r\n        let emailError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!this.state.email) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (!((/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i).test(this.state.email))) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            passwordError = \"Invalid Password\";\r\n        }\r\n\r\n        if (emailError || passwordError) {\r\n            this.setState({ emailError, passwordError });\r\n            return false;\r\n        }\r\n        alert(email.value + ' ' + password.value);\r\n        return true;\r\n    };\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"loginDiv\">\r\n                <NavigationBar />\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6 col-md-7 mx-auto\">\r\n                            <form onSubmit={this.handleSubmit} class=\"form-signin\">\r\n                                <div class=\"text-center mb-4\">\r\n                                    <br /><h1>Login</h1>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.email} name=\"email\" type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" required=\"\" autofocus=\"\" ref={(c) => email = c} onChange={this.handleChange} />\r\n                                    <label for=\"email\">Email</label>\r\n                                    <div className=\"errorMessage\"> {this.state.emailError} </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.password} name=\"password\" type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"\" ref={(c) => password = c} onChange={this.handleChange} />\r\n                                    <label for=\"password\">Password</label>\r\n                                    <div className=\"errorMessage\"> {this.state.passwordError} </div>\r\n                                </div>\r\n\r\n                                <button class=\"btn btn-lg btn-secondary btn-block\" type=\"submit\">Login</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ResetPassword\">\r\n                    <a href=\"/forgotpassword\"> Forgot password? </a>\r\n                </div>\r\n                <div className=\"ResetPassword\">\r\n                    <a href=\"/register\"> New User? Register Here.</a>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}