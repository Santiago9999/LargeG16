{"ast":null,"code":"var _jsxFileName = \"/home/elaine/ReactTest/frontend/src/components/PageTitle.js\";\nimport React, { useState, Component } from 'react';\nimport '../components/Background.css';\nimport NavigationBar from '../components/NavigationBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nconst regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\nconst formValid = ({\n  isError,\n  ...rest\n}) => {\n  let isValid = false;\n  Object.values(isError).forEach(val => {\n    if (val.length > 0) {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n  });\n  Object.values(rest).forEach(val => {\n    if (val === null) {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n  });\n  return isValid;\n};\n\nvar loginName;\nvar password;\nvar email;\nexport default class UserForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        alert(loginName.value + ' ' + password.value + ' ' + email.value);\n        console.log(this.state);\n      } else {\n        console.log(\"Form is invalid!\");\n      }\n    };\n\n    this.formValChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let isError = { ...this.state.isError\n      };\n\n      switch (name) {\n        case \"loginName\":\n          isError.name = value.length < 1 ? \"Invalid Name\" : \"\";\n          break;\n\n        case \"email\":\n          isError.email = regExp.test(value) ? \"\" : \"Invalid Email\";\n          break;\n\n        case \"password\":\n          isError.password = value.length < 1 ? \"Invalid Password\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        isError,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      loginName: '',\n      email: '',\n      password: '',\n      isError: {\n        loginName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loginDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-6 col-md-7 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      class: \"form-signin\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"loginName\",\n      class: \"form-control\",\n      placeholder: \"Username\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => loginName = c,\n      className: isError.loginName.length > 0 ? \"form-control\" : \"is-invalid form-control\",\n      name: \"loginName\",\n      onChange: this.formValChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), isError.loginName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, isError.loginName), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"loginName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Username\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      class: \"form-control\",\n      placeholder: \"Password\",\n      required: \"\",\n      ref: c => password = c,\n      className: isError.password.length > 0 ? \"form-control\" : \"is-invalid form-control\",\n      name: \"password\",\n      onChange: this.formValChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), isError.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, isError.password), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      class: \"form-control\",\n      placeholder: \"Email\",\n      required: \"\",\n      ref: c => email = c,\n      className: isError.email.length > 0 ? \"form-control\" : \"is-invalid form-control\",\n      name: \"email\",\n      onChange: this.formValChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), isError.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, isError.email), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-lg btn-secondary btn-block\",\n      type: \"submit\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Login\"))))));\n  }\n\n}","map":{"version":3,"sources":["/home/elaine/ReactTest/frontend/src/components/PageTitle.js"],"names":["React","useState","Component","NavigationBar","regExp","RegExp","formValid","isError","rest","isValid","Object","values","forEach","val","length","loginName","password","email","UserForm","constructor","props","onSubmit","e","preventDefault","state","alert","value","console","log","formValChange","name","target","test","setState","render","c"],"mappings":"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","sourcesContent":["import React, {useState, Component} from 'react';\r\nimport '../components/Background.css';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst regExp = RegExp(\r\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\r\n)\r\n\r\nconst formValid = ({ isError, ...rest }) => {\r\n    let isValid = false;\r\n\r\n    Object.values(isError).forEach(val => {\r\n        if (val.length > 0) {\r\n            isValid = false\r\n        } else {\r\n            isValid = true\r\n        }\r\n    });\r\n\r\n    Object.values(rest).forEach(val => {\r\n        if (val === null) {\r\n            isValid = false\r\n        } else {\r\n            isValid = true\r\n        }\r\n    });\r\n\r\n    return isValid;\r\n};\r\n\r\n\r\nvar loginName;\r\nvar password;\r\nvar email;\r\n\r\nexport default class UserForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loginName: '',\r\n            email: '',\r\n            password: '',\r\n            isError: {\r\n                loginName: '',\r\n                email: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (formValid(this.state)) {\r\n            alert( loginName.value + ' ' + password.value + ' ' + email.value);\r\n            console.log(this.state)\r\n        } else {\r\n            console.log(\"Form is invalid!\");\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    formValChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.target;\r\n        let isError = { ...this.state.isError };\r\n\r\n        switch (name) {\r\n            case \"loginName\":\r\n                isError.name =\r\n                    value.length < 1 ? \"Invalid Name\" : \"\";\r\n                break;\r\n            case \"email\":\r\n                isError.email = regExp.test(value)\r\n                    ? \"\"\r\n                    : \"Invalid Email\";\r\n                break;\r\n            case \"password\":\r\n                isError.password =\r\n                    value.length < 1 ? \"Invalid Password\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            isError,\r\n            [name]: value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { isError } = this.state;\r\n\r\n        return (\r\n            <div id=\"loginDiv\">\r\n            <NavigationBar />\r\n            <div class=\"container\">\r\n            <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-7 mx-auto\">\r\n            <form onSubmit={this.onSubmit} class=\"form-signin\" noValidate>\r\n            <div class=\"text-center mb-4\">\r\n            <br /> <h1>Login</h1>\r\n            </div>\r\n\r\n            <div class=\"form-label-group\">\r\n                <input type=\"text\" id=\"loginName\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\" ref={(c) => loginName = c} \r\n                className={isError.loginName.length > 0 ? \"form-control\" : \"is-invalid form-control\"} \r\n                name=\"loginName\" onChange={this.formValChange}/>\r\n                 {isError.loginName.length > 0 && (\r\n                        <span className=\"invalid-feedback\">{isError.loginName}</span>\r\n                    )}\r\n                <label for=\"loginName\">Username</label>\r\n            </div>\r\n\r\n            <div class=\"form-label-group\">\r\n                <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"\" ref={(c) => password = c}\r\n                className={isError.password.length > 0 ?  \"form-control\" : \"is-invalid form-control\"}\r\n                name=\"password\" onChange={this.formValChange}/>\r\n                {isError.password.length > 0 && (\r\n                        <span className=\"invalid-feedback\">{isError.password}</span>\r\n                )}\r\n                <label for=\"password\">Password</label>\r\n            </div>  \r\n\r\n            <div class=\"form-label-group\">\r\n                <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" required=\"\" ref={(c) => email = c}\r\n                className={isError.email.length > 0 ? \"form-control\" : \"is-invalid form-control\"}\r\n                name=\"email\" onChange={this.formValChange}/>\r\n                {isError.email.length > 0 && (\r\n                        <span className=\"invalid-feedback\">{isError.email}</span>\r\n                )}\r\n                <label for=\"email\">Email</label>\r\n            </div>  \r\n\r\n            <button class=\"btn btn-lg btn-secondary btn-block\" type=\"submit\" onClick={this.onSubmit}>Login</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}