{"ast":null,"code":"var _jsxFileName = \"/home/elaine/ReactTest/frontend/src/components/ForgotPassword.js\";\nimport React, { useState, Component } from 'react';\nimport '../components/Background.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nvar email;\nvar code;\nvar noError;\nconst initialState = {\n  email: \"\",\n  emailError: \"\",\n  code: \"\",\n  error: \"\",\n  result: \"'\"\n};\n\nfunction setCookie(cname, cvalue) {\n  var minutes = 20;\n  var date = new Date();\n  var expires = \"expires=\" + date.setTime(date.getTime() + minutes * 60 * 1000);\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nfunction randomString(length, chars) {\n  var result = '';\n\n  for (var i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\n\n  return result;\n}\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        code = randomString(8, '0123456789abcdefghijklmnopqrstuvwxyz');\n        alert(code);\n        var url = 'https://cop4331mern.herokuapp.com/api/postForgotPassword';\n        var postForgotPassword = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email.value,\n            code: code.value\n          })\n        };\n        fetch(url, postForgotPassword).then(res => res.json()).then(json => this.setState({\n          result: json.result,\n          error: json.error\n        }, function () {\n          noError = this.errorChecking();\n\n          if (noError) {\n            setCookie(\"resetCode\", code);\n            setCookie(\"email\", email);\n            console.log(this.state);\n            this.setState(initialState);\n            window.location.href = '/resetpassword';\n          }\n        }));\n      }\n    };\n\n    this.errorChecking = () => {\n      let error = \"\";\n\n      if (this.state.error === \"\") {//there are no errors\n      } else {\n        error = this.state.error;\n      }\n\n      if (error) {\n        this.setState({\n          error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n\n      if (!this.state.email) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i.test(this.state.email)) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (emailError) {\n        this.setState({\n          emailError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = event => {\n      const isCheckbox = event.target.type === \"checkbox\";\n      this.setState({\n        [event.target.name]: isCheckbox ? event.target.checked : event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"forgotPasswordDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-6 col-md-7 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      class: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.email,\n      name: \"email\",\n      type: \"email\",\n      id: \"email\",\n      class: \"form-control\",\n      placeholder: \"Email\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => email = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \" \", this.state.emailError, \" \")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-lg btn-secondary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Reset\"))))));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/elaine/ReactTest/frontend/src/components/ForgotPassword.js"],"names":["React","useState","Component","email","code","noError","initialState","emailError","error","result","setCookie","cname","cvalue","minutes","date","Date","expires","setTime","getTime","document","cookie","randomString","length","chars","i","Math","round","random","ForgotPassword","state","handleSubmit","event","preventDefault","isValid","validate","alert","url","postForgotPassword","method","headers","body","JSON","stringify","value","fetch","then","res","json","setState","errorChecking","console","log","window","location","href","test","handleChange","isCheckbox","target","type","name","checked","render","c"],"mappings":"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","sourcesContent":["import React, {useState, Component} from 'react';\r\nimport '../components/Background.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nvar email;\r\nvar code;\r\nvar noError;\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    emailError: \"\",\r\n    code: \"\",\r\n    error: \"\",\r\n    result: \"'\"\r\n};\r\n\r\nfunction setCookie(cname, cvalue) {\r\n    var minutes = 20;\r\n\tvar date = new Date();\r\n\tvar expires = \"expires=\" + date.setTime(date.getTime()+(minutes*60*1000));\t\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nfunction randomString(length, chars) {\r\n    var result = '';\r\n    for (var i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nclass ForgotPassword extends Component {\r\n    state = initialState;\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n        code = (randomString(8, '0123456789abcdefghijklmnopqrstuvwxyz'));\r\n        alert(code);\r\n        var url = 'https://cop4331mern.herokuapp.com/api/postForgotPassword';\r\n        var postForgotPassword =\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email: email.value, code: code.value })\r\n        }\r\n\r\n        fetch(url, postForgotPassword)\r\n            .then(res => res.json())\r\n            .then(json => this.setState({\r\n                result: json.result, error: json.error\r\n            }, function () {\r\n                noError = this.errorChecking();\r\n                if (noError) {\r\n                    setCookie(\"resetCode\", code);\r\n                    setCookie(\"email\", email);\r\n                    console.log(this.state);\r\n                    this.setState(initialState);\r\n                    window.location.href = '/resetpassword';\r\n                }\r\n            })\r\n            );\r\n        }\r\n    };\r\n\r\n    errorChecking = () => {\r\n        let error = \"\";\r\n        if (this.state.error === \"\") {\r\n            //there are no errors\r\n        } else {\r\n            error = this.state.error;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validate = () => {\r\n        let emailError = \"\";\r\n\r\n        if(!this.state.email) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if(!((/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i).test(this.state.email))){\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if(emailError){\r\n            this.setState({emailError});\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n          [event.target.name]: isCheckbox\r\n            ? event.target.checked\r\n            : event.target.value\r\n        });\r\n      };\r\n\r\n      render(){\r\n        return(\r\n            <div id=\"forgotPasswordDiv\">\r\n                <div class=\"container\">\r\n                <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-7 mx-auto\">\r\n                <form onSubmit={this.handleSubmit} class=\"form-signin\">\r\n                <div class=\"text-center mb-4\"></div>\r\n    \r\n                <div class=\"form-label-group\">\r\n                    <input value={this.state.email} name = \"email\" type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" required=\"\" autofocus=\"\" ref={(c) => email = c} onChange={this.handleChange}/>\r\n                    <label for=\"email\">Email</label>\r\n                    <div className =\"errorMessage\"> {this.state.emailError} </div>\r\n                </div>\r\n    \r\n                <button class=\"btn btn-lg btn-secondary btn-block\" type=\"submit\">Reset</button>\r\n                </form>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}