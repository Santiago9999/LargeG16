{"ast":null,"code":"var _jsxFileName = \"/home/elaine/ReactTest/frontend/src/components/RegisterForm.js\";\nimport React, { Component } from 'react';\nimport '../components/Background.css';\nimport NavigationBar from '../components/NavigationBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport md5 from '../components/md5';\nvar firstName;\nvar lastName;\nvar email;\nvar hashedPassword;\nvar password;\nvar confirmPassword;\nvar noError;\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  firstNameError: \"\",\n  lastNameError: \"\",\n  emailError: \"\",\n  passwordError: \"\",\n  confirmPasswordError: \"\",\n  dummyFirstName: \"\",\n  dummyLastName: \"\",\n  result: \"\",\n  error: \"\"\n};\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        hashedPassword = md5(this.state.password);\n        var url = 'https://cop4331mern.herokuapp.com/api/postRegister';\n        var postRegister = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            firstName: firstName.value,\n            lastName: lastName.value,\n            email: email.value,\n            password: hashedPassword\n          })\n        };\n        fetch(url, postRegister).then(res => res.json()).then(json => this.setState({\n          dummyFirstName: json.firstName,\n          dummyLastName: json.lastName,\n          result: json.result,\n          error: json.error\n        }, function () {\n          noError = this.errorChecking();\n          console.log(noError);\n\n          if (noError) {\n            console.log(this.state);\n            this.setState(initialState);\n            window.location.href = '/registered';\n          }\n        }));\n      }\n    };\n\n    this.errorChecking = () => {\n      let error = \"\";\n\n      if (this.state.error === \"\") {//there are no errors\n      } else {\n        error = this.state.error;\n      }\n\n      if (error) {\n        this.setState({\n          error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.validate = () => {\n      let firstNameError = \"\";\n      let lastNameError = \"\";\n      let emailError = \"\";\n      let passwordError = \"\";\n      let confirmPasswordError = \"\";\n\n      if (!this.state.firstName) {\n        firstNameError = \"Invalid First Name\";\n      }\n\n      if (!this.state.lastName) {\n        lastNameError = \"Invalid Last Name\";\n      }\n\n      if (!this.state.email) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i.test(this.state.email)) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!this.state.password) {\n        passwordError = \"Invalid Password\";\n      }\n\n      if (!this.state.confirmPassword) {\n        confirmPasswordError = \"Invalid Password\";\n      }\n\n      if (this.state.password !== this.state.confirmPassword) {\n        confirmPasswordError = \"Passwords Do Not Match\";\n      }\n\n      if (firstNameError || lastNameError || emailError || passwordError || confirmPasswordError) {\n        this.setState({\n          firstNameError,\n          lastNameError,\n          emailError,\n          passwordError,\n          confirmPasswordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = event => {\n      const isCheckbox = event.target.type === \"checkbox\";\n      this.setState({\n        [event.target.name]: isCheckbox ? event.target.checked : event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"registerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-6 col-md-7 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      class: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 43\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.firstName,\n      name: \"firstName\",\n      type: \"text\",\n      id: \"firstName\",\n      class: \"form-control\",\n      placeholder: \"First Name\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => firstName = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, \" \", this.state.firstNameError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.lastName,\n      name: \"lastName\",\n      type: \"text\",\n      id: \"lastName\",\n      class: \"form-control\",\n      placeholder: \"Last Name\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => lastName = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, \" \", this.state.lastNameError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.email,\n      name: \"email\",\n      type: \"email\",\n      id: \"email\",\n      class: \"form-control\",\n      placeholder: \"Email\",\n      required: \"\",\n      autofocus: \"\",\n      ref: c => email = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, \" \", this.state.emailError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.password,\n      name: \"password\",\n      type: \"password\",\n      id: \"password\",\n      class: \"form-control\",\n      placeholder: \"Password\",\n      required: \"\",\n      ref: c => password = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }, \" \", this.state.passwordError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.confirmPassword,\n      name: \"confirmPassword\",\n      type: \"password\",\n      id: \"confirmPassword\",\n      class: \"form-control\",\n      placeholder: \"Confirm Password\",\n      required: \"\",\n      ref: c => confirmPassword = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    }, \" Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }, \" \", this.state.confirmPasswordError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, \" \", this.state.error, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-lg btn-secondary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, \"Register\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ResetPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, \" Already have an account? Login here.\")));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/elaine/ReactTest/frontend/src/components/RegisterForm.js"],"names":["React","Component","NavigationBar","md5","firstName","lastName","email","hashedPassword","password","confirmPassword","noError","initialState","firstNameError","lastNameError","emailError","passwordError","confirmPasswordError","dummyFirstName","dummyLastName","result","error","RegisterForm","state","handleSubmit","event","preventDefault","isValid","validate","url","postRegister","method","headers","body","JSON","stringify","value","fetch","then","res","json","setState","errorChecking","console","log","window","location","href","test","handleChange","isCheckbox","target","type","name","checked","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../components/Background.css';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport md5 from '../components/md5'\r\n\r\n\r\nvar firstName;\r\nvar lastName;\r\nvar email;\r\nvar hashedPassword;\r\nvar password;\r\nvar confirmPassword;\r\nvar noError;\r\n\r\nconst initialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    firstNameError: \"\",\r\n    lastNameError: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    confirmPasswordError: \"\",\r\n    dummyFirstName: \"\",\r\n    dummyLastName: \"\",\r\n    result: \"\",\r\n    error: \"\"\r\n};\r\n\r\nclass RegisterForm extends Component {\r\n    state = initialState;\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            hashedPassword = md5(this.state.password);\r\n\r\n            var url = 'https://cop4331mern.herokuapp.com/api/postRegister';\r\n            var postRegister =\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    firstName: firstName.value, lastName: lastName.value,\r\n                    email: email.value, password: hashedPassword\r\n                })\r\n            }\r\n\r\n            fetch(url, postRegister)\r\n                .then(res => res.json())\r\n                .then(json => this.setState({\r\n                    dummyFirstName: json.firstName, dummyLastName: json.lastName, result: json.result, error: json.error\r\n                }, function () {\r\n                    noError = this.errorChecking();\r\n                    console.log(noError);\r\n                    if (noError) {\r\n                        console.log(this.state);\r\n                        this.setState(initialState);\r\n                        window.location.href = '/registered';\r\n                    }\r\n                })\r\n                );\r\n        }\r\n    };\r\n\r\n\r\n    errorChecking = () => {\r\n        let error = \"\";\r\n\r\n        if (this.state.error === \"\") {\r\n            //there are no errors\r\n        } else {\r\n            error = this.state.error;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validate = () => {\r\n        let firstNameError = \"\";\r\n        let lastNameError = \"\";\r\n        let emailError = \"\";\r\n        let passwordError = \"\";\r\n        let confirmPasswordError = \"\";\r\n\r\n        if (!this.state.firstName) {\r\n            firstNameError = \"Invalid First Name\";\r\n        }\r\n\r\n        if (!this.state.lastName) {\r\n            lastNameError = \"Invalid Last Name\";\r\n        }\r\n\r\n        if (!this.state.email) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (!((/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i).test(this.state.email))) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            passwordError = \"Invalid Password\";\r\n        }\r\n\r\n        if (!this.state.confirmPassword) {\r\n            confirmPasswordError = \"Invalid Password\";\r\n        }\r\n\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            confirmPasswordError = \"Passwords Do Not Match\";\r\n        }\r\n\r\n        if (firstNameError || lastNameError || emailError || passwordError || confirmPasswordError) {\r\n            this.setState({ firstNameError, lastNameError, emailError, passwordError, confirmPasswordError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"registerDiv\">\r\n                <NavigationBar />\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6 col-md-7 mx-auto\">\r\n                            <form onSubmit={this.handleSubmit} class=\"form-signin\">\r\n                                <div class=\"text-center mb-4\">\r\n                                    <br /><h1>Register</h1>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.firstName} name=\"firstName\" type=\"text\" id=\"firstName\" class=\"form-control\" placeholder=\"First Name\" required=\"\" autofocus=\"\" ref={(c) => firstName = c} onChange={this.handleChange} />\r\n                                    <label for=\"firstName\">First Name</label>\r\n                                    <div className=\"errorMessage\"> {this.state.firstNameError} </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.lastName} name=\"lastName\" type=\"text\" id=\"lastName\" class=\"form-control\" placeholder=\"Last Name\" required=\"\" autofocus=\"\" ref={(c) => lastName = c} onChange={this.handleChange} />\r\n                                    <label for=\"lastName\">Last Name</label>\r\n                                    <div className=\"errorMessage\"> {this.state.lastNameError} </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.email} name=\"email\" type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" required=\"\" autofocus=\"\" ref={(c) => email = c} onChange={this.handleChange} />\r\n                                    <label for=\"email\">Email</label>\r\n                                    <div className=\"errorMessage\"> {this.state.emailError} </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.password} name=\"password\" type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"\" ref={(c) => password = c} onChange={this.handleChange} />\r\n                                    <label for=\"password\">Password</label>\r\n                                    <div className=\"errorMessage\"> {this.state.passwordError} </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-label-group\">\r\n                                    <input value={this.state.confirmPassword} name=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" class=\"form-control\" placeholder=\"Confirm Password\" required=\"\" ref={(c) => confirmPassword = c} onChange={this.handleChange} />\r\n                                    <label for=\"confirmPassword\"> Confirm Password</label>\r\n                                    <div className=\"errorMessage\"> {this.state.confirmPasswordError} </div>\r\n                                </div>\r\n\r\n                                <div className=\"errorMessage\"> {this.state.error} </div> <br />\r\n\r\n                                <button class=\"btn btn-lg btn-secondary btn-block\" type=\"submit\">Register</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ResetPassword\">\r\n                    <a href=\"/login\"> Already have an account? Login here.</a>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}