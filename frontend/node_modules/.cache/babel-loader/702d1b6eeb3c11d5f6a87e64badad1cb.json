{"ast":null,"code":"var _jsxFileName = \"/home/elaine/ReactTest/frontend/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport '../components/Background.css';\nimport NavigationBar from '../components/NavigationBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport md5 from '../components/md5';\nvar email;\nvar password;\nvar hashedPassword;\nvar ID;\nvar firstName;\nvar lastName;\nvar Intro;\nvar CS1;\nvar CS2;\nvar Total;\nconst initialState = {\n  ID: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  Intro: [],\n  CS1: [],\n  CS2: [],\n  Total: [],\n  email: \"\",\n  password: \"\",\n  emailError: \"\",\n  passwordError: \"\",\n  dummyID: \"\",\n  dummyFirstName: \"\",\n  dummyLastName: \"\",\n  dummyIntro: [],\n  dummyCS1: [],\n  dummyCS2: [],\n  dummyTotal: []\n};\n\nfunction setCookie(cname, cvalue) {\n  var minutes = 20;\n  var date = new Date();\n  var expires = \"expires=\" + date.setTime(date.getTime() + minutes * 60 * 1000);\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        hashedPassword = md5(this.state.password);\n        this.componentDidMount();\n        const noError = this.errorChecking();\n        console.log(noError);\n\n        if (noError) {\n          setCookie(\"ID\", ID);\n          setCookie(\"firstName\", firstName);\n          setCookie(\"lastName\", lastName);\n          setCookie(\"Intro\", Intro);\n          setCookie(\"CS1\", CS1);\n          setCookie(\"CS2\", CS2);\n          setCookie(\"Total\", Total);\n          console.log(this.state);\n          this.setState(initialState); //window.location.href = '/logged';\n        }\n      }\n    };\n\n    this.errorChecking = () => {\n      let error = \"\";\n      console.log(error.value);\n\n      if (this.state.error === \"\") {//there are no errors\n      } else {\n        error = this.state.error;\n      }\n\n      if (error) {\n        this.setState({\n          error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n      let passwordError = \"\";\n\n      if (!this.state.email) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i.test(this.state.email)) {\n        emailError = \"Invalid Email\";\n      }\n\n      if (!this.state.password) {\n        passwordError = \"Invalid Password\";\n      }\n\n      if (emailError || passwordError) {\n        this.setState({\n          emailError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = event => {\n      const isCheckbox = event.target.type === \"checkbox\";\n      this.setState({\n        [event.target.name]: isCheckbox ? event.target.checked : event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    var url = 'https://cop4331mern.herokuapp.com/api/getLogin';\n    var postLogin = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email.value,\n        password: hashedPassword\n      }) //change to hashed\n\n    };\n    fetch(url, postLogin).then(res => res.json()).then(json => this.setState({\n      dummyID: json.ID,\n      dummyFirstName: json.firstName,\n      dummyLastName: json.lastName,\n      dummyIntro: json.intro,\n      dummyCS1: json.CS1,\n      dummyCS2: json.CS2,\n      dummyTotal: json.Total,\n      error: json.error\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loginDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-7 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 43\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.email,\n      name: \"email\",\n      type: \"email\",\n      id: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      required: \"\",\n      autoFocus: \"\",\n      ref: c => email = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \" \", this.state.emailError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.password,\n      name: \"password\",\n      type: \"password\",\n      id: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: \"\",\n      ref: c => password = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, \" \", this.state.passwordError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, \" \", this.state.error, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-lg btn-secondary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, \"Login\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ResetPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/forgotpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \" Forgot password? \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ResetPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, \" New User? Register Here.\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/elaine/ReactTest/frontend/src/components/LoginForm.js"],"names":["React","Component","NavigationBar","md5","email","password","hashedPassword","ID","firstName","lastName","Intro","CS1","CS2","Total","initialState","emailError","passwordError","dummyID","dummyFirstName","dummyLastName","dummyIntro","dummyCS1","dummyCS2","dummyTotal","setCookie","cname","cvalue","minutes","date","Date","expires","setTime","getTime","document","cookie","LoginForm","state","handleSubmit","event","preventDefault","isValid","validate","componentDidMount","noError","errorChecking","console","log","setState","error","value","test","handleChange","isCheckbox","target","type","name","checked","url","postLogin","method","headers","body","JSON","stringify","fetch","then","res","json","intro","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../components/Background.css';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport md5 from '../components/md5'\r\n\r\nvar email;\r\nvar password;\r\nvar hashedPassword;\r\nvar ID;\r\nvar firstName;\r\nvar lastName;\r\nvar Intro;\r\nvar CS1;\r\nvar CS2;\r\nvar Total;\r\n\r\n\r\nconst initialState = {\r\n    ID: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    Intro: [],\r\n    CS1: [],\r\n    CS2: [],\r\n    Total: [],\r\n    email: \"\",\r\n    password: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    dummyID: \"\",\r\n    dummyFirstName: \"\",\r\n    dummyLastName: \"\",\r\n    dummyIntro: [],\r\n    dummyCS1: [],\r\n    dummyCS2:[],\r\n    dummyTotal: [],\r\n};\r\n\r\nfunction setCookie(cname, cvalue) {\r\n    var minutes = 20;\r\n\tvar date = new Date();\r\n\tvar expires = \"expires=\" + date.setTime(date.getTime()+(minutes*60*1000));\t\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\n\r\n\r\nclass LoginForm extends Component {\r\n    state = initialState;\r\n\r\n    componentDidMount() {\r\n        var url = 'https://cop4331mern.herokuapp.com/api/getLogin';\r\n        var postLogin =\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email: email.value, password: hashedPassword }) //change to hashed\r\n        }\r\n\r\n        fetch(url, postLogin)\r\n            .then(res => res.json())\r\n            .then(json => this.setState({\r\n                dummyID: json.ID, dummyFirstName: json.firstName, dummyLastName: json.lastName, dummyIntro: json.intro, dummyCS1: json.CS1,\r\n                dummyCS2: json.CS2, dummyTotal: json.Total, error: json.error\r\n            })\r\n            );\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            hashedPassword = md5(this.state.password);\r\n\r\n            this.componentDidMount();\r\n\r\n            const noError = this.errorChecking();\r\n            console.log(noError);\r\n            if (noError){\r\n                    setCookie(\"ID\", ID);\r\n                    setCookie(\"firstName\", firstName);\r\n                    setCookie(\"lastName\", lastName);\r\n                    setCookie(\"Intro\", Intro);\r\n                    setCookie(\"CS1\", CS1);\r\n                    setCookie(\"CS2\", CS2);\r\n                    setCookie(\"Total\", Total);\r\n                    console.log(this.state);\r\n                    this.setState(initialState);\r\n                    //window.location.href = '/logged';\r\n                   \r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    errorChecking = () => {\r\n        let error = \"\";\r\n        console.log(error.value)\r\n        if(this.state.error === \"\"){\r\n            //there are no errors\r\n        } else {\r\n            error = this.state.error;\r\n        }\r\n\r\n        if(error){\r\n            this.setState({error});\r\n            return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    validate = () => {\r\n        let emailError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!this.state.email) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (!((/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/i).test(this.state.email))) {\r\n            emailError = \"Invalid Email\";\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            passwordError = \"Invalid Password\";\r\n        }\r\n\r\n        if (emailError || passwordError) {\r\n            this.setState({ emailError, passwordError });\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    handleChange = event => {\r\n        const isCheckbox = event.target.type === \"checkbox\";\r\n        this.setState({\r\n            [event.target.name]: isCheckbox\r\n                ? event.target.checked\r\n                : event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"loginDiv\">\r\n                <NavigationBar />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-md-7 mx-auto\">\r\n                            <form onSubmit={this.handleSubmit} className=\"form-signin\">\r\n                                <div className=\"text-center mb-4\">\r\n                                    <br /><h1>Login</h1>\r\n                                </div>\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input value={this.state.email} name=\"email\" type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email\" required=\"\" autoFocus=\"\" ref={(c) => email = c} onChange={this.handleChange} />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <div className=\"errorMessage\"> {this.state.emailError} </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input value={this.state.password} name=\"password\" type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" required=\"\" ref={(c) => password = c} onChange={this.handleChange} />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <div className=\"errorMessage\"> {this.state.passwordError} </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"errorMessage\"> {this.state.error} </div> <br/>\r\n\r\n                                <button className=\"btn btn-lg btn-secondary btn-block\" type=\"submit\">Login</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ResetPassword\">\r\n                    <a href=\"/forgotpassword\"> Forgot password? </a>\r\n                </div>\r\n                <div className=\"ResetPassword\">\r\n                    <a href=\"/register\"> New User? Register Here.</a>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}