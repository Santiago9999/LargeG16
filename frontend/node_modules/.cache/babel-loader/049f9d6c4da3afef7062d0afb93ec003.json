{"ast":null,"code":"var _jsxFileName = \"/home/elaine/ReactTest/frontend/src/components/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport '../components/Background.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nvar email;\nvar code;\nvar noError;\nconst initialState = {\n  code: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  codeError: \"\",\n  passwordError: \"\",\n  confirmPasswordError: \"\",\n  result: \"\",\n  error: \"\",\n  email: \"\"\n};\n\nfunction getCookie(cname) {\n  var name = cname + \"=\";\n  var ca = document.cookie.split(';');\n\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n\n  return \"\";\n}\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n    this.email = getCookie(\"email\");\n    this.resetCode = getCookie(\"code\");\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        var url = 'https://cop4331mern.herokuapp.com/api/postChangePassword';\n        var postChangePassword = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email.value,\n            password: password.value\n          })\n        };\n        fetch(url, postChangePassword).then(res => res.json()).then(json => this.setState({\n          result: json.result,\n          error: json.error\n        }, function () {\n          noError = this.errorChecking();\n\n          if (noError) {\n            setCookie(\"resetCode\", code);\n            setCookie(\"email\", email);\n            console.log(this.state);\n            this.setState(initialState);\n            window.location.href = '/resetpassword';\n          }\n        }));\n      }\n    };\n\n    this.errorChecking = () => {\n      let error = \"\";\n\n      if (this.state.error === \"\") {//there are no errors\n      } else {\n        error = this.state.error;\n      }\n\n      if (error) {\n        this.setState({\n          error\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.validate = () => {\n      let codeError = \"\";\n      let passwordError = \"\";\n      let confirmPasswordError = \"\";\n\n      if (this.state.code != resetCode) {\n        codeError = \"Incorrect Reset Code\";\n      }\n\n      if (!this.state.code) {\n        codeError = \"Invalid Reset Code\";\n      }\n\n      if (this.state.code.length != 8) {\n        codeError = \"Invalid Reset Code\";\n      }\n\n      if (!this.state.password) {\n        passwordError = \"Invalid Password\";\n      }\n\n      if (!this.state.confirmPassword) {\n        confirmPasswordError = \"Invalid Password\";\n      }\n\n      if (this.state.password !== this.state.confirmPassword) {\n        confirmPasswordError = \"Passwords Do Not Match\";\n      }\n\n      if (passwordError || confirmPasswordError || codeError) {\n        this.setState({\n          passwordError,\n          confirmPasswordError,\n          codeError\n        });\n        return false;\n      }\n\n      return true;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"resetPasswordDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-7 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 43\n      }\n    }, \"Reset Password\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.code,\n      name: \"code\",\n      type: \"text\",\n      id: \"code\",\n      className: \"form-control\",\n      placeholder: \"Reset Code\",\n      required: \"\",\n      autoFocus: \"\",\n      ref: c => code = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, \"Reset Code\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, \" \", this.state.codeError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.password,\n      name: \"password\",\n      type: \"password\",\n      id: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: \"\",\n      ref: c => password = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, \" \", this.state.passwordError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.confirmPassword,\n      name: \"confirmPassword\",\n      type: \"password\",\n      id: \"confirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Confirm Password\",\n      required: \"\",\n      ref: c => confirmPassword = c,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \" \", this.state.confirmPasswordError, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, \" \", this.state.error, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-lg btn-secondary btn-block\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, \"Login\"))))));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/elaine/ReactTest/frontend/src/components/ResetPassword.js"],"names":["React","Component","email","code","noError","initialState","password","confirmPassword","codeError","passwordError","confirmPasswordError","result","error","getCookie","cname","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","ResetPassword","state","resetCode","handleSubmit","event","preventDefault","isValid","validate","url","postChangePassword","method","headers","body","JSON","stringify","value","fetch","then","res","json","setState","errorChecking","setCookie","console","log","window","location","href","render","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,8BAAP;AACA,OAAO,kCAAP;AAEA,IAAIC,KAAJ;AACA,IAAIC,IAAJ;AACA,IAAIC,OAAJ;AAEA,MAAMC,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE,EADW;AAEjBG,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,eAAe,EAAE,EAHA;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,aAAa,EAAE,EALE;AAMjBC,EAAAA,oBAAoB,EAAE,EANL;AAOjBC,EAAAA,MAAM,EAAE,EAPS;AAQjBC,EAAAA,KAAK,EAAE,EARU;AASjBV,EAAAA,KAAK,EAAE;AATU,CAArB;;AAYA,SAASW,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,MAAIC,IAAI,GAAGD,KAAK,GAAG,GAAnB;AACA,MAAIE,EAAE,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,EAAE,CAACK,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,QAAIE,CAAC,GAAGN,EAAE,CAACI,CAAD,CAAV;;AACA,WAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,MAAgB,GAAvB,EAA4B;AAC1BD,MAAAA,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAJ;AACD;;AACD,QAAIF,CAAC,CAACG,OAAF,CAAUV,IAAV,MAAoB,CAAxB,EAA2B;AACzB,aAAOO,CAAC,CAACE,SAAF,CAAYT,IAAI,CAACM,MAAjB,EAAyBC,CAAC,CAACD,MAA3B,CAAP;AACD;AACF;;AACD,SAAO,EAAP;AACD;;AAEH,MAAMK,aAAN,SAA4BzB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClC0B,KADkC,GAC1BtB,YAD0B;AAAA,SAElCH,KAFkC,GAE1BW,SAAS,CAAC,OAAD,CAFiB;AAAA,SAGlCe,SAHkC,GAGtBf,SAAS,CAAC,MAAD,CAHa;;AAAA,SAKlCgB,YALkC,GAKnBC,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,OAAO,GAAG,KAAKC,QAAL,EAAhB;;AACA,UAAID,OAAJ,EAAa;AACT,YAAIE,GAAG,GAAG,0DAAV;AACA,YAAIC,kBAAkB,GACtB;AACIC,UAAAA,MAAM,EAAE,MADZ;AAEIC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFb;AAGIC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEtC,YAAAA,KAAK,EAAEA,KAAK,CAACuC,KAAf;AAAsBnC,YAAAA,QAAQ,EAAEA,QAAQ,CAACmC;AAAzC,WAAf;AAHV,SADA;AAOAC,QAAAA,KAAK,CAACR,GAAD,EAAMC,kBAAN,CAAL,CACKQ,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUE,IAAI,IAAI,KAAKC,QAAL,CAAc;AACxBnC,UAAAA,MAAM,EAAEkC,IAAI,CAAClC,MADW;AACHC,UAAAA,KAAK,EAAEiC,IAAI,CAACjC;AADT,SAAd,EAEX,YAAY;AACXR,UAAAA,OAAO,GAAG,KAAK2C,aAAL,EAAV;;AACA,cAAI3C,OAAJ,EAAa;AACT4C,YAAAA,SAAS,CAAC,WAAD,EAAc7C,IAAd,CAAT;AACA6C,YAAAA,SAAS,CAAC,OAAD,EAAU9C,KAAV,CAAT;AACA+C,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AACA,iBAAKmB,QAAL,CAAczC,YAAd;AACA8C,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,gBAAvB;AACH;AACJ,SAXa,CAFlB;AAeH;AACJ,KAjCiC;;AAAA,SAmClCN,aAnCkC,GAmClB,MAAM;AAClB,UAAInC,KAAK,GAAG,EAAZ;;AAEA,UAAI,KAAKe,KAAL,CAAWf,KAAX,KAAqB,EAAzB,EAA6B,CACzB;AACH,OAFD,MAEO;AACHA,QAAAA,KAAK,GAAG,KAAKe,KAAL,CAAWf,KAAnB;AACH;;AAED,UAAIA,KAAJ,EAAW;AACP,aAAKkC,QAAL,CAAc;AAAElC,UAAAA;AAAF,SAAd;AACA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAjDiC;;AAAA,SAmDlCqB,QAnDkC,GAmDvB,MAAM;AACb,UAAIzB,SAAS,GAAG,EAAhB;AACA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,oBAAoB,GAAG,EAA3B;;AAEA,UAAG,KAAKiB,KAAL,CAAWxB,IAAX,IAAmByB,SAAtB,EAAgC;AAC5BpB,QAAAA,SAAS,GAAG,sBAAZ;AACH;;AACD,UAAI,CAAC,KAAKmB,KAAL,CAAWxB,IAAhB,EAAsB;AAClBK,QAAAA,SAAS,GAAG,oBAAZ;AACH;;AAED,UAAG,KAAKmB,KAAL,CAAWxB,IAAX,CAAgBkB,MAAhB,IAA0B,CAA7B,EAA+B;AAC3Bb,QAAAA,SAAS,GAAG,oBAAZ;AACH;;AAED,UAAI,CAAC,KAAKmB,KAAL,CAAWrB,QAAhB,EAA0B;AACtBG,QAAAA,aAAa,GAAG,kBAAhB;AACH;;AAED,UAAI,CAAC,KAAKkB,KAAL,CAAWpB,eAAhB,EAAiC;AAC7BG,QAAAA,oBAAoB,GAAG,kBAAvB;AACH;;AAED,UAAI,KAAKiB,KAAL,CAAWrB,QAAX,KAAwB,KAAKqB,KAAL,CAAWpB,eAAvC,EAAwD;AACpDG,QAAAA,oBAAoB,GAAG,wBAAvB;AACH;;AAED,UAAID,aAAa,IAAIC,oBAAjB,IAAyCF,SAA7C,EAAwD;AACpD,aAAKsC,QAAL,CAAc;AAAErC,UAAAA,aAAF;AAAiBC,UAAAA,oBAAjB;AAAuCF,UAAAA;AAAvC,SAAd;AACA,eAAO,KAAP;AACH;;AAED,aAAO,IAAP;AACH,KArFiC;AAAA;;AAwFlC8C,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKzB,YAArB;AAAmC,MAAA,SAAS,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADV,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWxB,IAAzB;AAA+B,MAAA,IAAI,EAAC,MAApC;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAuD,MAAA,EAAE,EAAC,MAA1D;AAAiE,MAAA,SAAS,EAAC,cAA3E;AAA0F,MAAA,WAAW,EAAC,YAAtG;AAAmH,MAAA,QAAQ,EAAC,EAA5H;AAA+H,MAAA,SAAS,EAAC,EAAzI;AAA4I,MAAA,GAAG,EAAGmB,CAAD,IAAOnB,IAAI,GAAGmB,CAA/J;AAAkK,MAAA,QAAQ,EAAE,KAAKiC,YAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgC,KAAK5B,KAAL,CAAWnB,SAA3C,MAHJ,CALJ,eAWI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE,KAAKmB,KAAL,CAAWrB,QAAzB;AAAmC,MAAA,IAAI,EAAC,UAAxC;AAAmD,MAAA,IAAI,EAAC,UAAxD;AAAmE,MAAA,EAAE,EAAC,UAAtE;AAAiF,MAAA,SAAS,EAAC,cAA3F;AAA0G,MAAA,WAAW,EAAC,UAAtH;AAAiI,MAAA,QAAQ,EAAC,EAA1I;AAA6I,MAAA,GAAG,EAAGgB,CAAD,IAAOhB,QAAQ,GAAGgB,CAApK;AAAuK,MAAA,QAAQ,EAAE,KAAKiC,YAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgC,KAAK5B,KAAL,CAAWlB,aAA3C,MAHJ,CAXJ,eAiBI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWpB,eAAzB;AAA0C,MAAA,IAAI,EAAC,iBAA/C;AAAiE,MAAA,IAAI,EAAC,UAAtE;AAAiF,MAAA,EAAE,EAAC,iBAApF;AAAsG,MAAA,SAAS,EAAC,cAAhH;AAA+H,MAAA,WAAW,EAAC,kBAA3I;AAA8J,MAAA,QAAQ,EAAC,EAAvK;AAA0K,MAAA,GAAG,EAAGe,CAAD,IAAOf,eAAe,GAAGe,CAAxM;AAA2M,MAAA,QAAQ,EAAE,KAAKiC,YAA1N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgC,KAAK5B,KAAL,CAAWjB,oBAA3C,MAHJ,CAjBJ,eAuBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgC,KAAKiB,KAAL,CAAWf,KAA3C,MAvBJ,oBAuB6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvB7D,eAyBI;AAAQ,MAAA,SAAS,EAAC,oCAAlB;AAAuD,MAAA,IAAI,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBJ,CADJ,CADJ,CADJ,CAFJ,CADJ;AAsCP;;AA/HqC;;AAmItC,eAAec,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport '../components/Background.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nvar email;\r\nvar code;\r\nvar noError;\r\n\r\nconst initialState = {\r\n    code: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    codeError: \"\",\r\n    passwordError: \"\",\r\n    confirmPasswordError: \"\",\r\n    result: \"\",\r\n    error: \"\",\r\n    email: \"\",\r\n}\r\n\r\nfunction getCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i = 0; i < ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\nclass ResetPassword extends Component {\r\n    state = initialState;\r\n    email = getCookie(\"email\");\r\n    resetCode = getCookie(\"code\");\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            var url = 'https://cop4331mern.herokuapp.com/api/postChangePassword';\r\n            var postChangePassword =\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email: email.value, password: password.value })\r\n            }\r\n    \r\n            fetch(url, postChangePassword)\r\n                .then(res => res.json())\r\n                .then(json => this.setState({\r\n                    result: json.result, error: json.error\r\n                }, function () {\r\n                    noError = this.errorChecking();\r\n                    if (noError) {\r\n                        setCookie(\"resetCode\", code);\r\n                        setCookie(\"email\", email);\r\n                        console.log(this.state);\r\n                        this.setState(initialState);\r\n                        window.location.href = '/resetpassword';\r\n                    }\r\n                })\r\n                );\r\n        }\r\n    }\r\n\r\n    errorChecking = () => {\r\n        let error = \"\";\r\n\r\n        if (this.state.error === \"\") {\r\n            //there are no errors\r\n        } else {\r\n            error = this.state.error;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validate = () => {\r\n        let codeError = \"\";\r\n        let passwordError = \"\";\r\n        let confirmPasswordError = \"\";\r\n\r\n        if(this.state.code != resetCode){\r\n            codeError = \"Incorrect Reset Code\";\r\n        }\r\n        if (!this.state.code) {\r\n            codeError = \"Invalid Reset Code\";\r\n        }\r\n\r\n        if(this.state.code.length != 8){\r\n            codeError = \"Invalid Reset Code\";\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            passwordError = \"Invalid Password\";\r\n        }\r\n\r\n        if (!this.state.confirmPassword) {\r\n            confirmPasswordError = \"Invalid Password\";\r\n        }\r\n\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            confirmPasswordError = \"Passwords Do Not Match\";\r\n        }\r\n\r\n        if (passwordError || confirmPasswordError || codeError) {\r\n            this.setState({ passwordError, confirmPasswordError, codeError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"resetPasswordDiv\">\r\n                <NavigationBar />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-md-7 mx-auto\">\r\n                            <form onSubmit={this.handleSubmit} className=\"form-signin\">\r\n                                <div className=\"text-center mb-4\">\r\n                                    <br /><h1>Reset Password</h1>\r\n                                </div>\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input value={this.state.code} name=\"code\" type=\"text\" id=\"code\" className=\"form-control\" placeholder=\"Reset Code\" required=\"\" autoFocus=\"\" ref={(c) => code = c} onChange={this.handleChange} />\r\n                                    <label htmlFor=\"code\">Reset Code</label>\r\n                                    <div className=\"errorMessage\"> {this.state.codeError} </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input value={this.state.password} name=\"password\" type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" required=\"\" ref={(c) => password = c} onChange={this.handleChange} />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <div className=\"errorMessage\"> {this.state.passwordError} </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-label-group\">\r\n                                    <input value={this.state.confirmPassword} name=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" className=\"form-control\" placeholder=\"Confirm Password\" required=\"\" ref={(c) => confirmPassword = c} onChange={this.handleChange} />\r\n                                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                    <div className=\"errorMessage\"> {this.state.confirmPasswordError} </div>\r\n                                </div>\r\n\r\n                                <div className=\"errorMessage\"> {this.state.error} </div> <br/>\r\n\r\n                                <button className=\"btn btn-lg btn-secondary btn-block\" type=\"submit\">Login</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\n}\r\n\r\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}