{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jzxja\\\\Desktop\\\\reactState\\\\state-test\\\\src\\\\App.js\";\n\n/*\n  take in JSON packages which will then be converted to props\n  pass down those props to a render table function or class. \n  This render table function look for the state of the dropdown. when no state is chosen, show total score. When an option in the dropdown is chosen, switch the state and render those elements\n  category can be deleted from the table, and the webpage can just say \"TOP 10 leaders in \"category\"\n\n  personal stats should be a separate row at the top\n\n  learn how to take in a JSON package\n\nimport React, {Component} from 'react'\nimport './App.css'\nimport Table from 'react-bootstrap/Table'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, DropdownButton} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css' // for the minimal css for table and buttons\n\n\n\n\nconst App = () => \n{\n  const leader = \n  [\n    {name: \"this guy\", category: \"Intro to C\", score: 10, percentage: \"\"},\n    {name: \"person\", category: \"Intro to C\", score: 6, percentage: \"\"},\n    {name: \"dude\", category: \"Intro to C\", score: 2, percentage: \"\"},\n    {name: \"someone\", category: \"Intro to C\", score: 4, percentage: \"\"}\n  ]\n\n  leader.sort((a, b) => (a.score < b.score) ? 1 : -1)\n  \n  \n  const renderTable = (leader, index) =>\n  {\n    const bool1 = 12;\n    const bool2 = 32; \n\n    \n    return(\n      <tr key = {index}>\n        <td>{++index}</td>\n        <td>{leader.name}</td>\n        <td>{leader.category}</td>\n        <td>{leader.score}</td>\n        <td>{leader.percentage}</td>\n      </tr>\n    )\n  }\n\n  return (\n  <div className = \"App\">\n    \n    <div class = 'row'>\n      <div className = \"header\" class = 'col-md-5'></div>\n      <div className = \"header\" class = 'col-md-7'>\n        <h1 id='title' class = 'text-left'>Trivia Crevice</h1>\n      </div>\n    </div>\n\n\n    <div class = 'row'>\n      <div id = \"drop\" className = \"dropDown\" class = 'col-md-6'>\n        <DropdownButton  id=\"dropdown-basic-button\" title=\"Category\" variant = 'success'>\n          <Dropdown.Item id = 'ddOption' onClick = {() => this.setIntro}>Intro to C</Dropdown.Item>\n          <Dropdown.Item id = 'ddOption' href=\"#/action-2\">CSI</Dropdown.Item>\n          <Dropdown.Item id = 'ddOption' href=\"#/action-3\">CSII</Dropdown.Item>\n        </DropdownButton>\n      </div>      \n    </div>\n\n\n      <div class = 'col-md-7'>\n        <h1 id = 'title' class = 'text-left'>Leaderboards</h1>\n      </div>\n    </div>\n    \n\n    \n\n    <Table borderd  hover>\n      <thead>\n        <tr>\n          <th>Rank</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Score</th>\n          <th>Percentage</th>\n        </tr>\n      </thead>\n      <tbody>\n       {leader.map(renderTable)}\n      </tbody>\n    </Table>\n  </div>\n  )\n\n}\n\nexport default App;\n*/\n// wrap RenderPersonalStats in multiple if statements to hardcode the right values to send\n// figure out sending arrays of objects as props \n// get the buttons working \nimport React, { Component } from 'react';\nimport './App.css';\nimport Table from 'react-bootstrap/Table'; //import RenderPersonalStats from './RenderPersonalStats'\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, DropdownButton, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // for the minimal css for table and buttons\n// renders based on state and sends info based on which state to RenderPersonalStats\n// first issue was capitalizing all functiona and component names in react\n// second issue was acutally passing in the value when calling the function\n// third issue was that even a single element array needs to be mapped, so don't have an object as a single array\n// fourth issue is i forgot the 'personal' in props.personal.score\n// fifth issue is the differnce between arrow function and bind\n\nfunction RenderPersonal(props) {\n  if (props.category === \"Total\") {\n    return /*#__PURE__*/React.createElement(RenderPersonalStats, {\n      name: props.personal.name,\n      right: props.personal.totalR,\n      wrong: props.personal.totalW,\n      percentage: 100 * props.personal.totalR / props.personal.totalW,\n      score: props.personal.totalScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }\n    });\n  } else if (props.category === \"Intro to C\") {\n    return /*#__PURE__*/React.createElement(RenderPersonalStats, {\n      name: props.personal.name,\n      right: props.personal.introR,\n      wrong: props.personal.introW,\n      percentage: 100 * props.personal.introR / props.personal.introW,\n      score: props.personal.introScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    });\n  } else if (props.category === \"CSI\") {\n    return /*#__PURE__*/React.createElement(RenderPersonalStats, {\n      name: props.personal.name,\n      right: props.personal.cs1R,\n      wrong: props.personal.cs1W,\n      percentage: 100 * props.personal.cs1R / props.personal.cs1W,\n      score: props.personal.cs1Score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }\n    });\n  } else if (props.category === \"CSII\") {\n    return /*#__PURE__*/React.createElement(RenderPersonalStats, {\n      name: props.personal.name,\n      right: props.personal.cs2R,\n      wrong: props.personal.cs2W,\n      percentage: 100 * props.personal.cs2R / props.personal.cs2W,\n      score: props.personal.cs2Score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 12\n      }\n    });\n  }\n}\n\nfunction RenderPersonalStats(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderd: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Score\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Percentage\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Right/Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, props.score), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, props.percentage.toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, props.right, \"/\", props.wrong)))));\n} // remember to map the leaders because it's an array of objects\n// first error was knowing that leaders.map doesn't have to be in curly brackets becuase I haven't set up an HTML element for it to go into \n// if there was a div, then I need the curly brackets\n\n\nfunction RenderLeaders(props) {\n  const leaders = [{\n    name: \"bob\"\n  }, {\n    name: \"guy\"\n  }, {\n    name: \"dude\"\n  }];\n\n  if (true) {\n    return leaders.map((leader, index) => /*#__PURE__*/React.createElement(RenderLeadersStats, {\n      key: ++index,\n      leader: leader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 40\n      }\n    }));\n  }\n}\n\nfunction RenderLeadersStats(props) {\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, props.key), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, props.leader.name));\n}\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leaders: [{\n        name: \"this guy\",\n        category: \"Intro to C\",\n        score: 10,\n        percentage: \"\"\n      }, {\n        name: \"person\",\n        category: \"Intro to C\",\n        score: 6,\n        percentage: \"\"\n      }, {\n        name: \"dude\",\n        category: \"Intro to C\",\n        score: 2,\n        percentage: \"\"\n      }, {\n        name: \"someone\",\n        category: \"Intro to C\",\n        score: 4,\n        percentage: \"\"\n      }],\n      personal: {\n        name: \"me\",\n        introScore: 12,\n        cs1Score: 15,\n        cs2Score: 16,\n        totalScore: 40,\n        totalR: 123,\n        totalW: 400,\n        introR: 12,\n        introW: 15,\n        cs1R: 10,\n        cs1W: 12,\n        cs2R: 16,\n        cs2W: 18\n      },\n      category: \"Total\",\n      deleteValue: 1,\n      blah: 'name'\n    };\n  }\n\n  setIntro() {\n    this.setState({\n      category: \"Intro to C\"\n    });\n  }\n\n  setCS1() {\n    this.setState({\n      category: \"CSI\"\n    });\n  }\n\n  setCS2() {\n    this.setState({\n      category: \"CSII\"\n    });\n  }\n\n  setTotal() {\n    this.setState({\n      category: \"Total\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }\n    }, \"Trivia Crevice\"), /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      class: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 5\n      }\n    }, \"Leaderboards\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 31\n      }\n    }, this.state.category, \" Personal Stats\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"drop\",\n      className: \"dropDown\",\n      class: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: \"Category\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      id: \"ddOption\",\n      onClick: this.setTotal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      id: \"ddOption\",\n      onClick: this.setIntro.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, \"Intro to C\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      id: \"ddOption\",\n      onClick: this.setCS1.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, \"CSI\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      id: \"ddOption\",\n      onClick: this.setCS2.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, \"CSII\")))), /*#__PURE__*/React.createElement(RenderPersonal, {\n      category: this.state.category,\n      personal: this.state.personal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"aboveSpacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 5\n      }\n    }, this.state.category, \" Top 10 Leaders\"), /*#__PURE__*/React.createElement(Table, {\n      borderd: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    }, \"Rank\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }\n    }, \"Score\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }\n    }, \"Percentage\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }, \"Right/Total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RenderLeaders, {\n      category: this.state.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jzxja/Desktop/reactState/state-test/src/App.js"],"names":["React","Component","Table","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","DropdownButton","Button","RenderPersonal","props","category","personal","name","totalR","totalW","totalScore","introR","introW","introScore","cs1R","cs1W","cs1Score","cs2R","cs2W","cs2Score","RenderPersonalStats","score","percentage","toFixed","right","wrong","RenderLeaders","leaders","map","leader","index","RenderLeadersStats","key","App","constructor","state","deleteValue","blah","setIntro","setState","setCS1","setCS2","setTotal","render","bind"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,YAAjD,EAA+DC,cAA/D,EAA+EC,MAA/E,QAA4F,iBAA5F;AACA,OAAO,sCAAP,C,CAA8C;AAG9C;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EACA;AACE,MAAIA,KAAK,CAACC,QAAN,KAAmB,OAAvB,EACA;AACE,wBAAO,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAID,KAAK,CAACE,QAAN,CAAeC,IAA5C;AACqB,MAAA,KAAK,EAAIH,KAAK,CAACE,QAAN,CAAeE,MAD7C;AAEqB,MAAA,KAAK,EAAIJ,KAAK,CAACE,QAAN,CAAeG,MAF7C;AAGqB,MAAA,UAAU,EAAI,MAAML,KAAK,CAACE,QAAN,CAAeE,MAArB,GAA8BJ,KAAK,CAACE,QAAN,CAAeG,MAHhF;AAIqB,MAAA,KAAK,EAAIL,KAAK,CAACE,QAAN,CAAeI,UAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD,GAPD,MAQK,IAAIN,KAAK,CAACC,QAAN,KAAmB,YAAvB,EACL;AACE,wBAAO,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAID,KAAK,CAACE,QAAN,CAAeC,IAA5C;AACqB,MAAA,KAAK,EAAIH,KAAK,CAACE,QAAN,CAAeK,MAD7C;AAEqB,MAAA,KAAK,EAAIP,KAAK,CAACE,QAAN,CAAeM,MAF7C;AAGqB,MAAA,UAAU,EAAI,MAAMR,KAAK,CAACE,QAAN,CAAeK,MAArB,GAA8BP,KAAK,CAACE,QAAN,CAAeM,MAHhF;AAIqB,MAAA,KAAK,EAAIR,KAAK,CAACE,QAAN,CAAeO,UAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD,GAPI,MAQA,IAAIT,KAAK,CAACC,QAAN,KAAmB,KAAvB,EACL;AACE,wBAAO,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAID,KAAK,CAACE,QAAN,CAAeC,IAA5C;AACqB,MAAA,KAAK,EAAIH,KAAK,CAACE,QAAN,CAAeQ,IAD7C;AAEqB,MAAA,KAAK,EAAIV,KAAK,CAACE,QAAN,CAAeS,IAF7C;AAGqB,MAAA,UAAU,EAAI,MAAMX,KAAK,CAACE,QAAN,CAAeQ,IAArB,GAA4BV,KAAK,CAACE,QAAN,CAAeS,IAH9E;AAIqB,MAAA,KAAK,EAAIX,KAAK,CAACE,QAAN,CAAeU,QAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD,GAPI,MAQA,IAAIZ,KAAK,CAACC,QAAN,KAAmB,MAAvB,EACL;AACE,wBAAO,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAID,KAAK,CAACE,QAAN,CAAeC,IAA5C;AACqB,MAAA,KAAK,EAAIH,KAAK,CAACE,QAAN,CAAeW,IAD7C;AAEqB,MAAA,KAAK,EAAIb,KAAK,CAACE,QAAN,CAAeY,IAF7C;AAGqB,MAAA,UAAU,EAAI,MAAMd,KAAK,CAACE,QAAN,CAAeW,IAArB,GAA4Bb,KAAK,CAACE,QAAN,CAAeY,IAH9E;AAIqB,MAAA,KAAK,EAAId,KAAK,CAACE,QAAN,CAAea,QAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD;AACF;;AAED,SAASC,mBAAT,CAA6BhB,KAA7B,EACA;AAEI,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF,CADD,eASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACG,IAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACiB,KAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,KAAK,CAACkB,UAAN,CAAiBC,OAAjB,CAAyB,CAAzB,CAAL,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnB,KAAK,CAACoB,KAAX,OAAmBpB,KAAK,CAACqB,KAAzB,CAJF,CADF,CATD,CADL,CAFF;AAuBH,C,CAGD;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBtB,KAAvB,EACA;AACE,QAAMuB,OAAO,GACb,CACE;AAACpB,IAAAA,IAAI,EAAE;AAAP,GADF,EAEE;AAACA,IAAAA,IAAI,EAAE;AAAP,GAFF,EAGE;AAACA,IAAAA,IAAI,EAAE;AAAP,GAHF,CADA;;AAOA,MAAI,IAAJ,EACA;AACE,WACEoB,OAAO,CAACC,GAAR,CAAa,CAACC,MAAD,EAASC,KAAT,kBAAoB,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAI,EAAEA,KAA7B;AAAoC,MAAA,MAAM,EAAID,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CADF;AAGD;AACF;;AACD,SAASE,kBAAT,CAA4B3B,KAA5B,EACA;AACE,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAAC4B,GAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK5B,KAAK,CAACyB,MAAN,CAAatB,IAAlB,CAFF,CAFF;AAOD;;AAED,eAAe,MAAM0B,GAAN,SAAkBtC,SAAlB,CACf;AACEuC,EAAAA,WAAW,CAAC9B,KAAD,EACX;AACE,UAAMA,KAAN;AACA,SAAK+B,KAAL,GAAa;AACTR,MAAAA,OAAO,EACP,CACE;AAACpB,QAAAA,IAAI,EAAE,UAAP;AAAmBF,QAAAA,QAAQ,EAAE,YAA7B;AAA2CgB,QAAAA,KAAK,EAAE,EAAlD;AAAsDC,QAAAA,UAAU,EAAE;AAAlE,OADF,EAEE;AAACf,QAAAA,IAAI,EAAE,QAAP;AAAiBF,QAAAA,QAAQ,EAAE,YAA3B;AAAyCgB,QAAAA,KAAK,EAAE,CAAhD;AAAmDC,QAAAA,UAAU,EAAE;AAA/D,OAFF,EAGE;AAACf,QAAAA,IAAI,EAAE,MAAP;AAAeF,QAAAA,QAAQ,EAAE,YAAzB;AAAuCgB,QAAAA,KAAK,EAAE,CAA9C;AAAiDC,QAAAA,UAAU,EAAE;AAA7D,OAHF,EAIE;AAACf,QAAAA,IAAI,EAAE,SAAP;AAAkBF,QAAAA,QAAQ,EAAE,YAA5B;AAA0CgB,QAAAA,KAAK,EAAE,CAAjD;AAAoDC,QAAAA,UAAU,EAAE;AAAhE,OAJF,CAFS;AAQThB,MAAAA,QAAQ,EAAE;AAACC,QAAAA,IAAI,EAAE,IAAP;AAAaM,QAAAA,UAAU,EAAE,EAAzB;AAA6BG,QAAAA,QAAQ,EAAE,EAAvC;AAA2CG,QAAAA,QAAQ,EAAE,EAArD;AAAyDT,QAAAA,UAAU,EAAE,EAArE;AACVF,QAAAA,MAAM,EAAE,GADE;AACGC,QAAAA,MAAM,EAAE,GADX;AACgBE,QAAAA,MAAM,EAAE,EADxB;AAC4BC,QAAAA,MAAM,EAAE,EADpC;AACwCE,QAAAA,IAAI,EAAE,EAD9C;AACkDC,QAAAA,IAAI,EAAE,EADxD;AAC4DE,QAAAA,IAAI,EAAE,EADlE;AACsEC,QAAAA,IAAI,EAAE;AAD5E,OARD;AAWTb,MAAAA,QAAQ,EAAE,OAXD;AAYT+B,MAAAA,WAAW,EAAE,CAZJ;AAaTC,MAAAA,IAAI,EAAE;AAbG,KAAb;AAeD;;AAEDC,EAAAA,QAAQ,GACR;AACE,SAAKC,QAAL,CAAc;AAAClC,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD;;AAEDmC,EAAAA,MAAM,GACN;AACE,SAAKD,QAAL,CAAc;AAAClC,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD;;AAEDoC,EAAAA,MAAM,GACN;AACE,SAAKF,QAAL,CAAc;AAAClC,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD;;AAEDqC,EAAAA,QAAQ,GACR;AACE,SAAKH,QAAL,CAAc;AAAClC,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD;;AAGDsC,EAAAA,MAAM,GACN;AAEE,wBAEA;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAI,MAAA,EAAE,EAAG,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,eAGA;AAAI,MAAA,EAAE,EAAG,OAAT;AAAiB,MAAA,KAAK,EAAG,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,eAKA;AAAK,MAAA,KAAK,EAAG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,KAAK,EAAG,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKR,KAAL,CAAW9B,QAAhB,oBAAxB,CAFF,eAIE;AAAK,MAAA,EAAE,EAAG,MAAV;AAAiB,MAAA,SAAS,EAAG,UAA7B;AAAwC,MAAA,KAAK,EAAG,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAiB,MAAA,EAAE,EAAC,uBAApB;AAA4C,MAAA,KAAK,EAAC,UAAlD;AAA6D,MAAA,OAAO,EAAG,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,EAAE,EAAG,UAApB;AAA+B,MAAA,OAAO,EAAI,KAAKqC,QAAL,CAAcE,IAAd,CAAmB,IAAnB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,EAAE,EAAG,UAApB;AAA+B,MAAA,OAAO,EAAI,KAAKN,QAAL,CAAcM,IAAd,CAAmB,IAAnB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,EAAE,EAAG,UAApB;AAA+B,MAAA,OAAO,EAAI,KAAKJ,MAAL,CAAYI,IAAZ,CAAiB,IAAjB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,EAAE,EAAG,UAApB;AAA+B,MAAA,OAAO,EAAI,KAAKH,MAAL,CAAYG,IAAZ,CAAiB,IAAjB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CAJF,CALA,eAoBA,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAI,KAAKT,KAAL,CAAW9B,QAAvC;AAAiD,MAAA,QAAQ,EAAI,KAAK8B,KAAL,CAAW7B,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBA,eAsBA;AAAI,MAAA,KAAK,EAAG,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAK6B,KAAL,CAAW9B,QAAtC,oBAtBA,eAwBA,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAI,KAAK8B,KAAL,CAAW9B,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CAxBA,CAFA;AA+CD;;AA5FH","sourcesContent":["/*\n  take in JSON packages which will then be converted to props\n  pass down those props to a render table function or class. \n  This render table function look for the state of the dropdown. when no state is chosen, show total score. When an option in the dropdown is chosen, switch the state and render those elements\n  category can be deleted from the table, and the webpage can just say \"TOP 10 leaders in \"category\"\n\n  personal stats should be a separate row at the top\n\n  learn how to take in a JSON package\n\nimport React, {Component} from 'react'\nimport './App.css'\nimport Table from 'react-bootstrap/Table'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, DropdownButton} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css' // for the minimal css for table and buttons\n\n\n\n\nconst App = () => \n{\n  const leader = \n  [\n    {name: \"this guy\", category: \"Intro to C\", score: 10, percentage: \"\"},\n    {name: \"person\", category: \"Intro to C\", score: 6, percentage: \"\"},\n    {name: \"dude\", category: \"Intro to C\", score: 2, percentage: \"\"},\n    {name: \"someone\", category: \"Intro to C\", score: 4, percentage: \"\"}\n  ]\n\n  leader.sort((a, b) => (a.score < b.score) ? 1 : -1)\n  \n  \n  const renderTable = (leader, index) =>\n  {\n    const bool1 = 12;\n    const bool2 = 32; \n\n    \n    return(\n      <tr key = {index}>\n        <td>{++index}</td>\n        <td>{leader.name}</td>\n        <td>{leader.category}</td>\n        <td>{leader.score}</td>\n        <td>{leader.percentage}</td>\n      </tr>\n    )\n  }\n\n  return (\n  <div className = \"App\">\n    \n    <div class = 'row'>\n      <div className = \"header\" class = 'col-md-5'></div>\n      <div className = \"header\" class = 'col-md-7'>\n        <h1 id='title' class = 'text-left'>Trivia Crevice</h1>\n      </div>\n    </div>\n\n\n    <div class = 'row'>\n      <div id = \"drop\" className = \"dropDown\" class = 'col-md-6'>\n        <DropdownButton  id=\"dropdown-basic-button\" title=\"Category\" variant = 'success'>\n          <Dropdown.Item id = 'ddOption' onClick = {() => this.setIntro}>Intro to C</Dropdown.Item>\n          <Dropdown.Item id = 'ddOption' href=\"#/action-2\">CSI</Dropdown.Item>\n          <Dropdown.Item id = 'ddOption' href=\"#/action-3\">CSII</Dropdown.Item>\n        </DropdownButton>\n      </div>      \n    </div>\n\n\n      <div class = 'col-md-7'>\n        <h1 id = 'title' class = 'text-left'>Leaderboards</h1>\n      </div>\n    </div>\n    \n\n    \n\n    <Table borderd  hover>\n      <thead>\n        <tr>\n          <th>Rank</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Score</th>\n          <th>Percentage</th>\n        </tr>\n      </thead>\n      <tbody>\n       {leader.map(renderTable)}\n      </tbody>\n    </Table>\n  </div>\n  )\n\n}\n\nexport default App;\n*/\n\n// wrap RenderPersonalStats in multiple if statements to hardcode the right values to send\n// figure out sending arrays of objects as props \n// get the buttons working \n\nimport React, {Component} from 'react'\nimport './App.css'\nimport Table from 'react-bootstrap/Table'\n//import RenderPersonalStats from './RenderPersonalStats'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, DropdownButton, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css' // for the minimal css for table and buttons\n\n\n// renders based on state and sends info based on which state to RenderPersonalStats\n// first issue was capitalizing all functiona and component names in react\n// second issue was acutally passing in the value when calling the function\n// third issue was that even a single element array needs to be mapped, so don't have an object as a single array\n// fourth issue is i forgot the 'personal' in props.personal.score\n// fifth issue is the differnce between arrow function and bind\nfunction RenderPersonal(props)\n{\n  if (props.category === \"Total\")\n  {\n    return(<RenderPersonalStats name = {props.personal.name} \n                                right = {props.personal.totalR}\n                                wrong = {props.personal.totalW}\n                                percentage = {100 * props.personal.totalR / props.personal.totalW}\n                                score = {props.personal.totalScore}/>)\n  }\n  else if (props.category === \"Intro to C\")\n  {\n    return(<RenderPersonalStats name = {props.personal.name} \n                                right = {props.personal.introR}\n                                wrong = {props.personal.introW}\n                                percentage = {100 * props.personal.introR / props.personal.introW}\n                                score = {props.personal.introScore}/>)\n  }\n  else if (props.category === \"CSI\")\n  {\n    return(<RenderPersonalStats name = {props.personal.name} \n                                right = {props.personal.cs1R}\n                                wrong = {props.personal.cs1W}\n                                percentage = {100 * props.personal.cs1R / props.personal.cs1W}\n                                score = {props.personal.cs1Score}/>)\n  }\n  else if (props.category === \"CSII\")\n  {\n    return(<RenderPersonalStats name = {props.personal.name} \n                                right = {props.personal.cs2R}\n                                wrong = {props.personal.cs2W}\n                                percentage = {100 * props.personal.cs2R / props.personal.cs2W}\n                                score = {props.personal.cs2Score}/>)\n  }\n}\n\nfunction RenderPersonalStats(props)\n{\n  \n    return(\n\n      <div>\n           <Table borderd hover>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Score</th>\n                <th>Percentage</th>\n                <th>Right/Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{props.name}</td>\n                <td>{props.score}</td>\n                <td>{props.percentage.toFixed(2)}%</td>\n                <td>{props.right}/{props.wrong}</td>\n              </tr>\n            </tbody>\n          </Table>\n      </div>\n    )\n}\n\n\n// remember to map the leaders because it's an array of objects\n// first error was knowing that leaders.map doesn't have to be in curly brackets becuase I haven't set up an HTML element for it to go into \n// if there was a div, then I need the curly brackets\nfunction RenderLeaders(props)\n{\n  const leaders = \n  [\n    {name: \"bob\"},\n    {name: \"guy\"},\n    {name: \"dude\"}\n\n  ]\n  if (true)\n  {\n    return(\n      leaders.map( (leader, index) => (<RenderLeadersStats key = {++index} leader = {leader} />))\n    )\n  }\n}\nfunction RenderLeadersStats(props)\n{\n  return (\n\n    <tr>\n      <td>{props.key}</td>\n      <td>{props.leader.name}</td>\n    </tr>\n  )\n}\n\nexport default class App extends Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n        leaders:\n        [\n          {name: \"this guy\", category: \"Intro to C\", score: 10, percentage: \"\"},\n          {name: \"person\", category: \"Intro to C\", score: 6, percentage: \"\"},\n          {name: \"dude\", category: \"Intro to C\", score: 2, percentage: \"\"},\n          {name: \"someone\", category: \"Intro to C\", score: 4, percentage: \"\"}\n        ],\n        personal: {name: \"me\", introScore: 12, cs1Score: 15, cs2Score: 16, totalScore: 40, \n        totalR: 123, totalW: 400, introR: 12, introW: 15, cs1R: 10, cs1W: 12, cs2R: 16, cs2W: 18},\n        \n        category: \"Total\",\n        deleteValue: 1,\n        blah: 'name'\n    }\n  }\n\n  setIntro()\n  {\n    this.setState({category: \"Intro to C\"})\n  }\n\n  setCS1()\n  {\n    this.setState({category: \"CSI\"})\n  }\n\n  setCS2()\n  {\n    this.setState({category: \"CSII\"})\n  }\n\n  setTotal()\n  {\n    this.setState({category: \"Total\"})\n  }\n\n\n  render()\n  {\n\n    return(\n    \n    <div className = 'App'>\n\n    <h1 id = 'title'>Trivia Crevice</h1> \n    <h1 id = 'title' class = 'spacer'>Leaderboards</h1>\n\n    <div class = 'row'>\n      \n      <div class = 'col-md-5'><h2>{this.state.category} Personal Stats</h2></div>\n      \n      <div id = \"drop\" className = \"dropDown\" class = 'col-md-6'>\n        <DropdownButton  id=\"dropdown-basic-button\" title=\"Category\" variant = 'success'>\n          <Dropdown.Item id = 'ddOption' onClick = {this.setTotal.bind(this)}>Total</Dropdown.Item>        \n          <Dropdown.Item id = 'ddOption' onClick = {this.setIntro.bind(this)}>Intro to C</Dropdown.Item>\n          <Dropdown.Item id = 'ddOption' onClick = {this.setCS1.bind(this)}>CSI</Dropdown.Item>\n          <Dropdown.Item id = 'ddOption' onClick = {this.setCS2.bind(this)}>CSII</Dropdown.Item>\n        </DropdownButton>\n      </div> \n\n    </div>\n\n    <RenderPersonal category = {this.state.category} personal = {this.state.personal}/>\n\n    <h2 class = 'aboveSpacer'>{this.state.category} Top 10 Leaders</h2>\n    \n    <Table borderd hover>\n      <thead>\n        <tr>\n          <th>Rank</th>\n          <th>Name</th>\n          <th>Score</th>\n          <th>Percentage</th>\n          <th>Right/Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        <RenderLeaders category = {this.state.category} />\n      </tbody>\n    </Table>\n\n    \n\n\n\n   </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}